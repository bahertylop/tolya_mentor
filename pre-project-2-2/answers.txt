1. Какие есть способы получить данные из  .property/.yaml?

@Value - аннотация, по названию вытащит значение параметра
@ConfigurationProperties - аннотация, мапит целый блок настроек в поля класса
Environment - класс, объект дежит в spring context, метод getProperty(String key) для получения свойств

@PropertySource - аннотация, указывает файл .properties, который задает откуда брать свойства


spring-boot-starter
Spring Boot Starter — это набор предварительно настроенных зависимостей, который упрощает интеграцию и конфигурацию популярных библиотек в приложениях на базе Spring Boot. Стартеры позволяют быстро подключить нужные технологии, не заботясь о настройках и зависимостях вручную.

Каждый Spring Boot Starter включает в себя:

Библиотеки, необходимые для работы с конкретной технологией.
Конфигурацию по умолчанию для упрощения настройки.
Пример интеграции с Spring Boot.



2. Что такое Spring Boot?

Spring Boot — это фреймворк для разработки Java-приложений, основанный на платформе Spring,
который упрощает создание и развертывание приложений. Он предоставляет удобные инструменты
и настройки по умолчанию, которые позволяют разработчикам быстро начать работу с приложением
без необходимости вручную настраивать множество конфигураций.

Spring Boot - обертка над Spring, которая облегчает работу разработчика,
плюсы:
    минимизация конфигурации
    нет xml настроек

Spring Boot — это Spring, но с удобными настройками "из коробки"

представлены готовые наборы зависимостей, под названием стартеры
нет нужды добавления кучи различных библиотек, просто подключается стартер

имеет встроенный сервер (@SpringBootApplication создает исполняемый jar с сервером внутри)

есть актуатор - прикольная штука (стартер) позволяет мониторить приложение по запросам



3. Какая разница между аннотациями @Component, @Repository, @Service и @Controller , @RestController в Spring?

Component - базовая аннотация для бина, отмечает класс как Spring Bean

Service - аннотация для сервисов (логически указывает, что класс отвечает за бизнес-логику)

Repository - аннотация для DAO (работа с бд)

Controller - аннотация для MVC-контроллеров (обработчик запросов)
используется с Thymeleaf, JSP, Freemarker

RestController - аннотация для REST API
возвращает json/xml, а не html
спользуется в проектах без шаблонизаторов
Controller + ResponseBody

Controller и RestController отличаются наличием аннотации ResponseBody над объявлением RestController
которая говорит о наличии тела в ответе на запрос

@ResponseBody сообщает контроллеру, что возвращаемый объект автоматически сериализуется (используя Jackson message converter) в json или xml и
передается обратно в объект HttpResponse.

